<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>๐ช Documentation</title>
      <link>https://gilarellano.github.io/sash-solutions/</link>
      <description>Last 10 notes on ๐ช Documentation</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>AddOn</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/AddOn</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/AddOn</guid>
    <description>This enumeration represents additional features or treatments that can be applied to the glazing. LAMINATED: A type of safety glass that holds together when shattered.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>Design</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/Design</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/Design</guid>
    <description>This enumeration represents the different design patterns or styles that can be applied to a sash. DEFAULT: The standard design without any special patterns.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>Finish</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/Finish</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/Finish</guid>
    <description>This enumeration represents the different finishes that can be applied to a sash. PRIMED: The sash has been primed and is ready for painting. PAINTED: The sash has been painted.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>GlazingType</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/GlazingType</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/GlazingType</guid>
    <description>This enumeration represents the different types of glazing that can be applied to a window. SINGLE_PANE: A window that has only one layer of glass. DUAL_PANE: A window that has two layers of glass, often with a space between them for insulation.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>ProjectStatus</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/ProjectStatus</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/ProjectStatus</guid>
    <description>This enumeration represents the various stages a project can be in during its lifecycle. INITIATED: The project has been started but work may not have begun.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>QuoteStatus</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/QuoteStatus</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/QuoteStatus</guid>
    <description>This enumeration represents the various stages or statuses a quote can be in during its lifecycle. PENDING: The quote has been created but not yet reviewed or approved.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>WindowType</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/WindowType</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/Enumerations/WindowType</guid>
    <description>This enumeration represents the different types of windows that can be installed or replaced. SINGLE_HUNG: A window where only the bottom part moves vertically.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>UML Design</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/UML-Design</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/UML-Design</guid>
    <description>Textual representation of the UML Graph Classes ยง Quote ยง Attributes: quoteID: int projectID: int windows: list&lt;Window&gt; subtotal: double tax: double total: double status: QuoteStatus reasonForStatus: string dateCreated: date dateModified: date notes: string Methods: AddWindow(window: Window): void RemoveWindow(windowID: int): void UpdateWindow(window: Window): void CalculateSubtotal(): double CalculateTax(): double CalculateTotal(): double GetQuoteDetails(): dict GeneratePDF(): void Customer ยง Attributes: customerID: int name: string email: string phoneNumber: string address: string projectAddress: string projects: list&lt;Project&gt; Methods: UpdateDetails(details: dict): void GetCustomerDetails(): dict Project ยง Attributes: projectID: int customer: Customer quotes: list&lt;Quote&gt; status: ProjectStatus dateStarted: date estimatedCompletionDate: date Methods: AddQuote(quote: Quote): void RemoveQuote(quoteID: int): void UpdateStatus(status: string): void GetProjectDetails(): dict Window ยง Attributes: windowID: int type: WindowType width: double height: double description: string sashes: list&lt;Sash&gt; installationCost: double Methods: AddSash(sash: Sash): void RemoveSash(sashID: int): void GetSashes(): list&lt;Sash&gt; CalculateCost() PrintData() Sash ยง Attributes: sashID: int windowID: int width: double height: double perimeter: double frameCost: double numLites: int design: Design finish: Finish glazings: list&lt;Glazing&gt; Methods: CalculatePerimeter() CalculateDesignCost() CalculateFinishCost() AddGlazing(glazing: Glazing): void RemoveGlazing(glazingID: int): void GetGlazings(): list&lt;Glazing&gt; Glazing ยง Attributes: glazingID: int type: GlazingType area: double cost: double addOns: list&lt;AddOn&gt; Methods: CalculateArea() CalculateAddOnCost() AddAddOn(addOn: Addon): void RemoveAddOn(addOnID: int): void GetAddOns(): list&lt;AddOn&gt; RateCard ยง Attributes: itemType: string (e.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item><item>
    <title>UML Graph</title>
    <link>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/UML-Graph</link>
    <guid>https://gilarellano.github.io/sash-solutions//Design/UML-Diagrams/UML-Graph</guid>
    <description>Visual representation of the UML Design classDiagram class Quote { + quoteID: int + projectID: int + windows: list&lt;Window&gt; + subtotal: double + tax: double + total: double + status: QuoteStatus + dateCreated: date + dateModified: date + notes: string + AddWindow(window: Window): void + RemoveWindow(windowID: int): void + UpdateWindow(window: Window): void + CalculateSubtotal(): double + CalculateTax(): double + CalculateTotal(): double + GetQuoteDetails(): dict + GeneratePDF(): void } class Customer { + customerID: int + name: string + email: string + phoneNumber: string + address: string + projectAddress: string + projects: list&lt;Project&gt; + UpdateDetails(details: dict): void + GetCustomerDetails(): dict } class Project { + projectID: int + customer: Customer + quotes: list&lt;Quote&gt; + status: ProjectStatus + dateStarted: date + estimatedCompletionDate: date + AddQuote(quote: Quote): void + RemoveQuote(quoteID: int): void + UpdateStatus(status: string): void + GetProjectDetails(): dict } class Window { + windowID: int + type: WindowType + width: double + height: double + description: string + sashes: list&lt;Sash&gt; + installationCost: double + AddSash(sash: Sash): void + RemoveSash(sashID: int): void + GetSashes(): list&lt;Sash&gt; + CalculateCost() + PrintData() } class Sash { + sashID: int + windowID: int + width: double + height: double + perimeter: double + frameCost: double + numLites: int + design: Design + finish: Finish + glazings: list&lt;Glazing&gt; + CalculatePerimeter() + CalculateDesignCost() + CalculateFinishCost() + AddGlazing(glazing: Glazing): void + RemoveGlazing(glazingID: int): void + GetGlazings(): list&lt;Glazing&gt; } class Glazing { + glazingID: int + type: GlazingType + area: double + cost: double + addOns: list&lt;AddOn&gt; + CalculateArea() + CalculateAddOnCost() + AddAddOn(addOn: Addon): void + RemoveAddOn(addOnID: int): void + GetAddOns(): list&lt;AddOn&gt; } class RateCard { + itemType: string + itemName: string + rate: double + GetRate(itemType: string, itemName: string): double + UpdateRate(itemType: string, itemName: string, newRate: double): void } Quote &quot;1&quot; --&gt; &quot;many&quot; Window : contains Customer &quot;1&quot; --&gt; &quot;many&quot; Project : has Project &quot;1&quot; --&gt; &quot;many&quot; Quote : has Window &quot;1&quot; --&gt; &quot;many&quot; Sash : contains Sash &quot;1&quot; --&gt; &quot;many&quot; Glazing : has .</description>
    <pubDate>Sat, 14 Oct 2023 04:48:14 GMT</pubDate>
  </item><item>
    <title>Revision History</title>
    <link>https://gilarellano.github.io/sash-solutions//Requirements/Revision-History</link>
    <guid>https://gilarellano.github.io/sash-solutions//Requirements/Revision-History</guid>
    <description> VersionDateDescription of ChangesAuthor1.010/09/2023Initial draftGilberto A.</description>
    <pubDate>Fri, 13 Oct 2023 23:12:09 GMT</pubDate>
  </item>
    </channel>
  </rss>